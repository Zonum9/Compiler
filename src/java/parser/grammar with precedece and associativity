predFinal   ::=    "(" exp ")" | IDENT [funcall] | INT_LITERAL | STRING_LITERAL | CHAR_LITERAL | sizeof
pred1         ::=    pred1      (arrayaccess | fieldaccess) pred1 | predFinal
pred2       ::=    ("+" | "-" | typecast | addressof | valueat) pred2 | pred1      #unary plus and minus
pred3       ::=    pred3    ("/" | "*" | "%" ) pred2 | pred2
pred4       ::=    pred4    ("+" | "-" ) pred3 |  pred3
pred5       ::=    pred5    (">" | "<" | ">=" | "<=" ) pred4 |  pred4
pred6       ::=    pred6    ("!=" | "==" ) pred5 | pred5
pred7       ::=    pred7    "&&" pred6 | pred6
pred8       ::=    pred8    "||" pred7 | pred7
exp       ::=    pred8 "=" exp | pred8                                               #right to left



funcall      ::=  "(" [ exp ("," exp)* ] ")" # function call
arrayaccess  ::=  "[" exp "]"                  # array access
fieldaccess  ::=  "." IDENT                    # structure field member access
valueat      ::= "*" exp                          # Value at operator (pointer indirection)
addressof    ::= "&" exp                          # Address-of operator
sizeof       ::= "sizeof" "(" type ")"            # size of type
typecast     ::= "(" type ")" exp                 # type casting




